<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="8" total="15" passed="4" failed="3" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[There is no page limit option displayed]]>
    </line>
    <line>
      <![CDATA[page limit drop down value is selected]]>
    </line>
    <line>
      <![CDATA[Getting the column value of the first row]]>
    </line>
    <line>
      <![CDATA[There is no page limit option displayed]]>
    </line>
    <line>
      <![CDATA[page limit drop down value is selected]]>
    </line>
    <line>
      <![CDATA[There is no page limit option displayed]]>
    </line>
    <line>
      <![CDATA[page limit drop down value is selected]]>
    </line>
    <line>
      <![CDATA[Getting the column value of the first row]]>
    </line>
    <line>
      <![CDATA[Getting the column value of the first row]]>
    </line>
    <line>
      <![CDATA[There is no page limit option displayed]]>
    </line>
    <line>
      <![CDATA[page limit drop down value is selected]]>
    </line>
    <line>
      <![CDATA[Getting the column value of the first row]]>
    </line>
    <line>
      <![CDATA[Getting the column value of the first row]]>
    </line>
  </reporter-output>
  <suite started-at="2020-06-26T18:42:33 EDT" name="Suite" finished-at="2020-06-26T18:47:36 EDT" duration-ms="302791">
    <groups>
    </groups>
    <test started-at="2020-06-26T18:42:33 EDT" name="SafetyStockConfigsTests" finished-at="2020-06-26T18:47:36 EDT" duration-ms="302791">
      <class name="com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc]" started-at="2020-06-26T18:42:33 EDT" name="setup" finished-at="2020-06-26T18:42:44 EDT" duration-ms="10685" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@176333ee]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testaddSafetyStockByNodeItem()[pri:9, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc]" started-at="2020-06-26T18:42:44 EDT" name="testaddSafetyStockByNodeItem" description="to Verify add Safety stock through Node Item &amp; Fulfillment type &amp; supply type in Manage Safety Stock Configuration page" finished-at="2020-06-26T18:43:24 EDT" duration-ms="39711" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[There is no page limit option displayed]]>
            </line>
            <line>
              <![CDATA[page limit drop down value is selected]]>
            </line>
            <line>
              <![CDATA[Getting the column value of the first row]]>
            </line>
          </reporter-output>
        </test-method> <!-- testaddSafetyStockByNodeItem -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc]" started-at="2020-06-26T18:43:24 EDT" name="tearDown" finished-at="2020-06-26T18:43:24 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testaddSafetyStockByNodeItem status=SUCCESS method=SafetyStockConfigsTests.testaddSafetyStockByNodeItem()[pri:9, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc] output=There is no page limit option displayed]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc]" started-at="2020-06-26T18:43:24 EDT" name="setup" finished-at="2020-06-26T18:43:33 EDT" duration-ms="9860" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@176333ee]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testaddSafetyStockByNodeTypeItem()[pri:10, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc]" started-at="2020-06-26T18:43:33 EDT" name="testaddSafetyStockByNodeTypeItem" description="to Verify add Safety stock through Node Type Item &amp; Fulfillment type &amp; supply type in Manage Safety Stock Configuration page" finished-at="2020-06-26T18:44:19 EDT" duration-ms="45881" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"span.ss-icon.ss-navigateright.ss-black-tie-bold"}
  (Session info: chrome=83.0.4103.116)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'KOP-BM5TNF2', ip: '10.140.133.56', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '12.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 83.0.4103.116, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: C:\Users\shedubey\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:50865}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 678357116a2ceb19b70b166efa5194ea
*** Element info: {Using=css selector, value=span.ss-icon.ss-navigateright.ss-black-tie-bold}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"span.ss-icon.ss-navigateright.ss-black-tie-bold"}
  (Session info: chrome=83.0.4103.116)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'KOP-BM5TNF2', ip: '10.140.133.56', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '12.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 83.0.4103.116, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: C:\Users\shedubey\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:50865}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 678357116a2ceb19b70b166efa5194ea
*** Element info: {Using=css selector, value=span.ss-icon.ss-navigateright.ss-black-tie-bold}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:420)
at org.openqa.selenium.By$ByCssSelector.findElement(By.java:431)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy14.isEnabled(Unknown Source)
at com.gsicommerce.romui.selenium.pages.ordermanagement.CommonElementsPage.clickNextPage(CommonElementsPage.java:131)
at com.gsicommerce.romui.selenium.pages.ordermanagement.CommonElementsPage.getRowNo(CommonElementsPage.java:143)
at com.gsicommerce.romui.selenium.pages.ordermanagement.SafetyStockConfigsPage.addSafetyStock(SafetyStockConfigsPage.java:172)
at com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests.testaddSafetyStockByNodeTypeItem(SafetyStockConfigsTests.java:142)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[There is no page limit option displayed]]>
            </line>
            <line>
              <![CDATA[page limit drop down value is selected]]>
            </line>
          </reporter-output>
        </test-method> <!-- testaddSafetyStockByNodeTypeItem -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc]" started-at="2020-06-26T18:44:19 EDT" name="tearDown" finished-at="2020-06-26T18:44:20 EDT" duration-ms="390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testaddSafetyStockByNodeTypeItem status=FAILURE method=SafetyStockConfigsTests.testaddSafetyStockByNodeTypeItem()[pri:10, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc] output=There is no page limit option displayed]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc]" started-at="2020-06-26T18:44:20 EDT" name="setup" finished-at="2020-06-26T18:44:30 EDT" duration-ms="10252" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@176333ee]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testaddSafetyStockByNodeItemAttribute()[pri:11, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc]" started-at="2020-06-26T18:44:30 EDT" name="testaddSafetyStockByNodeItemAttribute" description="to Verify add Safety stock through NODE ITEM ATTRIBUTE &amp; Fulfillment type &amp; supply type in Manage Safety Stock Configuration page" finished-at="2020-06-26T18:45:05 EDT" duration-ms="35007" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[There is no page limit option displayed]]>
            </line>
            <line>
              <![CDATA[page limit drop down value is selected]]>
            </line>
            <line>
              <![CDATA[Getting the column value of the first row]]>
            </line>
            <line>
              <![CDATA[Getting the column value of the first row]]>
            </line>
          </reporter-output>
        </test-method> <!-- testaddSafetyStockByNodeItemAttribute -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc]" started-at="2020-06-26T18:45:05 EDT" name="tearDown" finished-at="2020-06-26T18:45:05 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testaddSafetyStockByNodeItemAttribute status=SUCCESS method=SafetyStockConfigsTests.testaddSafetyStockByNodeItemAttribute()[pri:11, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc] output=There is no page limit option displayed]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc]" started-at="2020-06-26T18:45:05 EDT" name="setup" finished-at="2020-06-26T18:45:15 EDT" duration-ms="10455" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@176333ee]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testaddSafetyStockByNodeTypeItemAttribute()[pri:12, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc]" started-at="2020-06-26T18:45:15 EDT" name="testaddSafetyStockByNodeTypeItemAttribute" description="to Verify add Safety stock through NODE TYPE ITEM ATTRIBUTE &amp; Fulfillment type &amp; supply type in Manage Safety Stock Configuration page" finished-at="2020-06-26T18:45:46 EDT" duration-ms="30630" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[There is no page limit option displayed]]>
            </line>
            <line>
              <![CDATA[page limit drop down value is selected]]>
            </line>
            <line>
              <![CDATA[Getting the column value of the first row]]>
            </line>
            <line>
              <![CDATA[Getting the column value of the first row]]>
            </line>
          </reporter-output>
        </test-method> <!-- testaddSafetyStockByNodeTypeItemAttribute -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc]" started-at="2020-06-26T18:45:46 EDT" name="tearDown" finished-at="2020-06-26T18:45:46 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testaddSafetyStockByNodeTypeItemAttribute status=SUCCESS method=SafetyStockConfigsTests.testaddSafetyStockByNodeTypeItemAttribute()[pri:12, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc] output=There is no page limit option displayed]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc]" started-at="2020-06-26T18:45:46 EDT" name="setup" finished-at="2020-06-26T18:45:56 EDT" duration-ms="10420" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@176333ee]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testaddSafetyStockByGLOBALNODETYPE()[pri:13, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc]" started-at="2020-06-26T18:45:56 EDT" name="testaddSafetyStockByGLOBALNODETYPE" description="to Verify add Safety stock through GLOBAL NODE TYPE &amp; Fulfillment type &amp; supply type in Manage Safety Stock Configuration page" finished-at="2020-06-26T18:46:13 EDT" duration-ms="16198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testaddSafetyStockByGLOBALNODETYPE -->
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc]" started-at="2020-06-26T18:46:13 EDT" name="setup" finished-at="2020-06-26T18:46:23 EDT" duration-ms="10841" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@176333ee]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc]" started-at="2020-06-26T18:46:13 EDT" name="tearDown" finished-at="2020-06-26T18:46:13 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testaddSafetyStockByGLOBALNODETYPE status=SUCCESS method=SafetyStockConfigsTests.testaddSafetyStockByGLOBALNODETYPE()[pri:13, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testaddSafetyStockByGLOBALSUPPLYTYPE()[pri:14, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc]" started-at="2020-06-26T18:46:23 EDT" name="testaddSafetyStockByGLOBALSUPPLYTYPE" description="to Verify add Safety stock through GLOBAL SUPPLY TYPE &amp; Fulfillment type &amp; supply type in Manage Safety Stock Configuration page" finished-at="2020-06-26T18:46:48 EDT" duration-ms="24027" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"#store_fulfillment_safety_stock_rule_safety_stock_condition_attributes_fulfillment_type_id"}
  (Session info: chrome=83.0.4103.116)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'KOP-BM5TNF2', ip: '10.140.133.56', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '12.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 83.0.4103.116, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: C:\Users\shedubey\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:51195}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: adfb5d6bc6d4b4146315c4879edcfcd3
*** Element info: {Using=css selector, value=#store_fulfillment_safety_stock_rule_safety_stock_condition_attributes_fulfillment_type_id}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#store_fulfillment_safety_stock_rule_safety_stock_condition_attributes_fulfillment_type_id"}
  (Session info: chrome=83.0.4103.116)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'KOP-BM5TNF2', ip: '10.140.133.56', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '12.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 83.0.4103.116, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: C:\Users\shedubey\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:51195}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: adfb5d6bc6d4b4146315c4879edcfcd3
*** Element info: {Using=css selector, value=#store_fulfillment_safety_stock_rule_safety_stock_condition_attributes_fulfillment_type_id}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:420)
at org.openqa.selenium.By$ByCssSelector.findElement(By.java:431)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy14.getTagName(Unknown Source)
at org.openqa.selenium.support.ui.Select.<init>(Select.java:45)
at com.gsicommerce.romui.selenium.utilities.Action.selectByVisibleText(Action.java:746)
at com.gsicommerce.romui.selenium.pages.ordermanagement.SafetyStockConfigsPage.addSafetyStock(SafetyStockConfigsPage.java:156)
at com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests.testaddSafetyStockByGLOBALSUPPLYTYPE(SafetyStockConfigsTests.java:202)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testaddSafetyStockByGLOBALSUPPLYTYPE -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc]" started-at="2020-06-26T18:46:48 EDT" name="tearDown" finished-at="2020-06-26T18:46:48 EDT" duration-ms="382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testaddSafetyStockByGLOBALSUPPLYTYPE status=FAILURE method=SafetyStockConfigsTests.testaddSafetyStockByGLOBALSUPPLYTYPE()[pri:14, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc]" started-at="2020-06-26T18:46:48 EDT" name="setup" finished-at="2020-06-26T18:46:59 EDT" duration-ms="10789" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@176333ee]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testaddSafetyStockByAGGREGRATEDGLOBAL()[pri:15, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc]" started-at="2020-06-26T18:46:59 EDT" name="testaddSafetyStockByAGGREGRATEDGLOBAL" description="to Verify add Safety stock through AGGREGRATED GLOBAL in Manage Safety Stock Configuration page" finished-at="2020-06-26T18:47:36 EDT" duration-ms="36849" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Cannot locate element with text: AGGREGRATED GLOBAL
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'KOP-BM5TNF2', ip: '10.140.133.56', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '12.0.2'
Driver info: driver.version: unknown]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Cannot locate element with text: AGGREGRATED GLOBAL
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'KOP-BM5TNF2', ip: '10.140.133.56', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '12.0.2'
Driver info: driver.version: unknown
at org.openqa.selenium.support.ui.Select.selectByVisibleText(Select.java:147)
at com.gsicommerce.romui.selenium.utilities.Action.selectByVisibleText(Action.java:747)
at com.gsicommerce.romui.selenium.pages.ordermanagement.SafetyStockConfigsPage.addSafetyStock(SafetyStockConfigsPage.java:108)
at com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests.testaddSafetyStockByAGGREGRATEDGLOBAL(SafetyStockConfigsTests.java:217)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testaddSafetyStockByAGGREGRATEDGLOBAL -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc]" started-at="2020-06-26T18:47:36 EDT" name="tearDown" finished-at="2020-06-26T18:47:36 EDT" duration-ms="377" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testaddSafetyStockByAGGREGRATEDGLOBAL status=FAILURE method=SafetyStockConfigsTests.testaddSafetyStockByAGGREGRATEDGLOBAL()[pri:15, instance:com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests@702657cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.gsicommerce.romui.selenium.tests.SafetyStockConfigsTests -->
    </test> <!-- SafetyStockConfigsTests -->
  </suite> <!-- Suite -->
</testng-results>
